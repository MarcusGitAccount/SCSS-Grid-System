//  sass --watch styles.scss:styles.css

$columns: 12;
$column-base: 100% / ($columns);

$font-scales: (
  xs: 15px,
  sm: 17px,
  md: 19px,
  lg: 21px,
  xl: 23px
);

$breakpoints: (
  xs: 320px,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px
);

$row-margin-sides: 15px;
$row-margin-tops: 3.5px;

$colors: (
  teal: #009688,
  cyan: #18ffff,
  orange: #e65100,
  blue-grey: #607d8b
);

* {
  font-family: 'Asap', sans-serif;
  color: #fff;
  padding: 0;
}

body {
  background: #255255;
}

.container {
  margin-right: 15px;
  margin-left: 15px;
}

.container.fluid {
  margin: 0;
}

.row {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin: $row-margin-tops $row-margin-sides;
  margin-top: $row-margin-tops;
  margin-bottom: $row-margin-tops;
}

.row.column-spacing-top {
  margin-top: 0;
  margin-bottom: 0;
}

.row.column-spacing-top > div {
  margin-top: $row-margin-tops;
  margin-bottom: $row-margin-tops;
}

.row.reverse {
  -webkit-box-orient: horizontal;
  -webkit-box-direction: reverse;
  -ms-flex-direction: row-reverse;
  flex-direction: row-reverse;
}
  
.row.space-around {
  -ms-flex-pack: distribute;
  justify-content: space-around;
}
  
.row.space-between {
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
}
  
.row.row-center {
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.row.full {
  margin-left: 0;
  margin-right: 0;
}

.text-center {
  text-align: center;
}

.bring-right {
  margin-left: auto;
}

.bring-left {
  margin-right: auto;
}

@each $type, $break-size in $breakpoints {
  $init-columns: null;
  $init-offsets: null;
  
  @for $size from 1 through $columns {
    $init-columns: append($init-columns, ".col-#{$type}-#{$size}", comma);
    $init-offsets: append($init-offsets, ".col-#{$type}-offset-#{$size}", comma);
  }
  
  @if ($break-size) {
    
    @media screen and (min-width: $break-size) {
      .font-scale {
        font-size: map-get($font-scales, $type);
      }
      
      #{$init-columns} {
        -webkit-box-flex: 0;
        -ms-flex: 0 0 auto;
        flex: 0 0 auto;
        max-width: 0;
      }
      
      #{$init-offsets} {
        margin-left: 0;
      }
      
      @for $size from 1 through $columns {
        .col-#{$type}-#{$size} {
          -ms-flex-preferred-size: $column-base * $size;
          flex-basis: $column-base * $size;
          max-width: $column-base * $size;
        }
        
        .col-#{$type}-offset-#{$size} {
          margin-left: $column-base * $size;
        }
      }
    }
  }
}

@each $name, $value in $colors {
  .#{$name} {
    background: $value;
  }
  
  .text-#{$name} {
    color: $value;
  }
}

.last {
  -webkit-box-ordinal-group: 2;
  -ms-flex-order: 1;
  order: 1;
}

.first {
  -webkit-box-ordinal-group: 0;
  -ms-flex-order: -1;
  order: -1;
}